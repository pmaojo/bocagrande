openapi: 3.0.0
info:
  title: MagicETL API
  description: |
    API para MagicETL - Plataforma modular de ETL con capacidades de IA.
    Esta API proporciona endpoints para gestionar proyectos, procesos ETL, transformaciones con IA y más.
  version: 1.0.0
  contact:
    name: Equipo de Desarrollo MagicETL
    email: support@magicetl.com
servers:
  - url: /api/panda
    description: Servidor principal de MagicETL
tags:
  - name: Proyectos
    description: Operaciones relacionadas con proyectos
  - name: Procesos
    description: Operaciones relacionadas con procesos ETL
  - name: Assets
    description: Operaciones relacionadas con archivos y recursos
  - name: Transformaciones IA
    description: Operaciones relacionadas con transformaciones basadas en IA
  - name: Pipelines
    description: Operaciones relacionadas con pipelines de datos

paths:
  /v1/projects:
    get:
      summary: Obtiene todos los proyectos
      tags: [Proyectos]
      responses:
        '200':
          description: Lista de proyectos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      summary: Crea un nuevo proyecto
      tags: [Proyectos]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
      responses:
        '201':
          description: Proyecto creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'

  /v1/projects/{project_id}:
    get:
      summary: Obtiene un proyecto por su ID
      tags: [Proyectos]
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalles del proyecto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Proyecto no encontrado
    put:
      summary: Actualiza un proyecto
      tags: [Proyectos]
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
      responses:
        '200':
          description: Proyecto actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Proyecto no encontrado
    delete:
      summary: Elimina un proyecto
      tags: [Proyectos]
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Proyecto eliminado
        '404':
          description: Proyecto no encontrado

  /v1/projects/{project_id}/processes:
    get:
      summary: Obtiene todos los procesos de un proyecto
      tags: [Procesos]
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [PENDING, IN_PROGRESS, COMPLETED, FAILED, STOPPED]
      responses:
        '200':
          description: Lista de procesos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Process'
    post:
      summary: Crea un nuevo proceso en un proyecto
      tags: [Procesos]
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessCreate'
      responses:
        '201':
          description: Proceso creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'

  /v1/processes/{process_id}:
    get:
      summary: Obtiene un proceso por su ID
      tags: [Procesos]
      parameters:
        - name: process_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalles del proceso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '404':
          description: Proceso no encontrado

  /v1/assets:
    post:
      summary: Crea un nuevo asset (archivo)
      tags: [Assets]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                project_id:
                  type: integer
                type:
                  type: string
                  enum: [csv, excel, json, parquet, sql, python, text]
      responses:
        '201':
          description: Asset creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'

  /v1/assets/{asset_id}:
    get:
      summary: Obtiene un asset por su ID
      tags: [Assets]
      parameters:
        - name: asset_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalles del asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '404':
          description: Asset no encontrado
    delete:
      summary: Elimina un asset
      tags: [Assets]
      parameters:
        - name: asset_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Asset eliminado
        '404':
          description: Asset no encontrado

  /v1/ai/transform:
    post:
      summary: Genera una transformación usando IA
      tags: [Transformaciones IA]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransformRequest'
      responses:
        '200':
          description: Transformación generada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformResponse'

  /v1/ai/analyze-flow:
    post:
      summary: Analiza un flujo ETL usando IA
      tags: [Transformaciones IA]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowAnalysisRequest'
      responses:
        '200':
          description: Análisis del flujo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowAnalysisResponse'

  /v1/pipelines:
    get:
      summary: Obtiene todos los pipelines
      tags: [Pipelines]
      parameters:
        - name: project_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Lista de pipelines
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pipeline'
    post:
      summary: Crea un nuevo pipeline
      tags: [Pipelines]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineCreate'
      responses:
        '201':
          description: Pipeline creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'

  /v1/pipelines/{pipeline_id}:
    get:
      summary: Obtiene un pipeline por su ID
      tags: [Pipelines]
      parameters:
        - name: pipeline_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalles del pipeline
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
        '404':
          description: Pipeline no encontrado
    delete:
      summary: Elimina un pipeline
      tags: [Pipelines]
      parameters:
        - name: pipeline_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Pipeline eliminado
        '404':
          description: Pipeline no encontrado

  /v1/pipelines/{pipeline_id}/versions:
    get:
      summary: Obtiene todas las versiones de un pipeline
      tags: [Pipelines]
      parameters:
        - name: pipeline_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista de versiones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PipelineVersion'
    post:
      summary: Crea una nueva versión de un pipeline
      tags: [Pipelines]
      parameters:
        - name: pipeline_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineVersionCreate'
      responses:
        '201':
          description: Versión creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineVersion'

  /v1/pipelines/{pipeline_id}/execute:
    post:
      summary: Ejecuta un pipeline
      tags: [Pipelines]
      parameters:
        - name: pipeline_id
          in: path
          required: true
          schema:
            type: string
        - name: version_id
          in: query
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineExecuteRequest'
      responses:
        '200':
          description: Resultado de la ejecución
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineExecutionResult'

components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ProjectCreate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string

    ProjectUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string

    Process:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
        status:
          type: string
          enum: [PENDING, IN_PROGRESS, COMPLETED, FAILED, STOPPED]
        project_id:
          type: integer
        started_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        details:
          type: object
        message:
          type: string
        output:
          type: object

    ProcessCreate:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
        type:
          type: string
        details:
          type: object

    Asset:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        filename:
          type: string
        path:
          type: string
        project_id:
          type: integer
        details:
          type: object
        size:
          type: integer

    TransformRequest:
      type: object
      required:
        - nodeId
        - nodeName
        - transformationDescription
      properties:
        nodeId:
          type: string
        nodeName:
          type: string
        transformationDescription:
          type: string
        sourceData:
          type: object
        targetSchema:
          type: object

    TransformResponse:
      type: object
      properties:
        transformationScript:
          type: string
        explanation:
          type: string
        tokenUsage:
          type: object
          properties:
            total:
              type: integer
            cost:
              type: number

    FlowAnalysisRequest:
      type: object
      required:
        - nodes
        - edges
      properties:
        nodes:
          type: array
          items:
            type: object
        edges:
          type: array
          items:
            type: object

    FlowAnalysisResponse:
      type: object
      properties:
        suggestions:
          type: array
          items:
            type: string
        optimizations:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        explanation:
          type: string
        tokenUsage:
          type: object
          properties:
            total:
              type: integer
            cost:
              type: number

    Pipeline:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        project_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        version_count:
          type: integer
        versions:
          type: array
          items:
            type: string

    PipelineCreate:
      type: object
      required:
        - name
        - project_id
      properties:
        name:
          type: string
        description:
          type: string
        project_id:
          type: integer

    PipelineVersion:
      type: object
      properties:
        version_id:
          type: string
        pipeline_id:
          type: string
        created_at:
          type: string
          format: date-time
        description:
          type: string
        nodes:
          type: array
          items:
            type: object
        edges:
          type: array
          items:
            type: object
        transform_script:
          type: string
        config:
          type: object

    PipelineVersionCreate:
      type: object
      required:
        - nodes
        - edges
      properties:
        description:
          type: string
        nodes:
          type: array
          items:
            type: object
        edges:
          type: array
          items:
            type: object
        transform_script:
          type: string
        config:
          type: object

    PipelineExecuteRequest:
      type: object
      properties:
        input_config:
          type: object
        output_config:
          type: object

    PipelineExecutionResult:
      type: object
      properties:
        pipeline_id:
          type: string
        version:
          type: string
        execution_time:
          type: number
        rows_processed:
          type: integer
        rows_output:
          type: integer
        columns_input:
          type: array
          items:
            type: string
        columns_output:
          type: array
          items:
            type: string
        executed_at:
          type: string
          format: date-time
        status:
          type: string
